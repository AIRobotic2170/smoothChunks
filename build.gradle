plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version as Object
group = project.maven_group as Object

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Cloth Config / Autoconfig
    modImplementation("me.shedaniel.cloth:config-2:4.8.2") {
        exclude(group: "net.fabricmc.fabric-api")
        exclude module: "modmenu"
    }
    modImplementation("me.sargunvohra.mcmods:autoconfig1u:3.2.2") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include "me.shedaniel.cloth:config-2:4.8.2"
    include "me.sargunvohra.mcmods:autoconfig1u:3.2.2"

    modImplementation "io.github.prospector:modmenu:1.14.6+build.31"

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

minecraft {
    accessWidener "src/main/resources/$archivesBaseName" + ".accesswidener"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    getArchiveClassifier().set("sources")
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            // add all the jars that should be included when publishing to maven
//            artifact(remapJar) {
//                builtBy remapJar
//            }
//            artifact(sourcesJar) {
//                builtBy remapSourcesJar
//            }
//        }
//    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
//         mavenLocal()
    }
}
